<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hover Reveal Effect with Lens</title>
    <style>
        body {
            margin: 0;
            height: 200vh;
            background-color: #d8c8b8;
        }
        .container {
            position: relative;
            width: 100vw;
            height: 200vh;
            overflow: hidden;
        }
        .background-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 200vh;
            background: url('https://previews.123rf.com/images/flas100/flas1001303/flas100130300067/18560836-%EB%B2%A0%EC%9D%B4%EC%A7%80-%EC%83%89-%EC%A2%85%EC%9D%B4-%EC%A7%88%EA%B0%90-%EB%B0%9D%EC%9D%80-%EB%B0%B0%EA%B2%BD.jpg') center/cover no-repeat;
            background-size: cover;
        }
        .reveal-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 200vh;
            background: url('https://collectionapi.metmuseum.org/api/collection/v1/iiif/397842/775275/main-image') center/cover no-repeat;
            background-size: cover;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.5s ease-in-out;
            mask-image: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 5%);
            -webkit-mask-image: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 5%);
        }
        .lens {
            position: absolute;
            width: 600px;
            height: 600px;
            border-radius: 50%;
            background: transparent;
            pointer-events: none;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            mix-blend-mode: screen;
            transition: transform 0.2s ease-out;
        }
        .lens::before {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(255,0,0,0.5) 5%, rgba(0,255,0,0.5) 50%, rgba(0,0,255,0.5) 95%, rgba(0,0,0,0) 100%);
            filter: blur(2px); /* RGB 분열 효과를 더 진하게 */
            mix-blend-mode: lighten;
            border: 1px solid rgba(255, 255, 255, 0.1); /* 반투명 테두리 범위 최소화 */
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="background-image"></div>
        <div class="reveal-image" id="revealImage"></div>
        <div class="lens" id="lens"></div>
    </div>
    <script>
        const lens = document.getElementById('lens');
        const revealImage = document.getElementById('revealImage');
        let isMouseOver = false;
        let targetX = 0, targetY = 0; // 목표 위치
        let currentX = 0, currentY = 0; // 현재 위치
        const damping = 0.1; // damping 효과 강도

        // 마우스 이동 시 목표 위치 업데이트
        document.addEventListener('mousemove', (e) => {
            isMouseOver = true;
            targetX = e.pageX - lens.offsetWidth / 2;
            targetY = e.pageY - lens.offsetHeight / 2;

            // 이미지 드러내기 (damping 효과 적용)
            setTimeout(() => {
                revealImage.style.opacity = 1;
                revealImage.style.maskImage = `radial-gradient(circle at ${e.pageX}px ${e.pageY}px, rgba(0,0,0,1) 1%, rgba(0,0,0,0) 5%)`;
                revealImage.style.webkitMaskImage = `radial-gradient(circle at ${e.pageX}px ${e.pageY}px, rgba(0,0,0,1) 1%, rgba(0,0,0,0) 5%)`;
            }, 100); // 딜레이 추가
        });

        // damping 효과 적용
        const updateLensPosition = () => {
            // 현재 위치를 목표 위치로 부드럽게 이동
            currentX += (targetX - currentX) * damping;
            currentY += (targetY - currentY) * damping;

            // 렌즈 위치 업데이트
            lens.style.left = `${currentX}px`;
            lens.style.top = `${currentY}px`;

            // 애니메이션 프레임 요청
            requestAnimationFrame(updateLensPosition);
        };

        // damping 효과 시작
        updateLensPosition();

        // 마우스가 영역을 벗어날 때
        document.addEventListener('mouseout', () => {
            isMouseOver = false;
            setTimeout(() => {
                if (!isMouseOver) {
                    revealImage.style.opacity = 0;
                }
            }, 500); // 딜레이 추가
        });
    </script>
</body>
</html>